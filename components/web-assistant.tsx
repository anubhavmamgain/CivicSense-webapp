"use client"

import type React from "react"

import { useState, useRef, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { MessageCircle, Send, X, Bot, User, Search, HelpCircle, ChevronUp, ChevronDown, Languages } from "lucide-react"

interface Message {
  id: string
  type: "user" | "assistant"
  content: string
  timestamp: Date
}

interface WebAssistantProps {
  isOpen: boolean
  onToggle: () => void
}

const translations = {
  en: {
    title: "CivicSense Assistant",
    placeholder: "Type your message...",
    help: "Help",
    status: "Status",
    welcome:
      'Hello! I\'m your CivicSense assistant. I can help you report issues, track reports, or answer questions. Try saying "help" to see what I can do!',
    loginResponse: `ЁЯФР **Login Guide**

To login:

1я╕ПтГг **Look for the "Login" button** in the navigation bar (top right)
2я╕ПтГг **Two options available:**
   тАв ЁЯУ▒ Mobile OTP - Login with phone number
   тАв ЁЯУз Email - Login with email and password

3я╕ПтГг **New users:** Sign up option is also available

**Tip:** If you\'re new, Mobile OTP is the easiest option!

Would you like me to guide you to the login page?`,
    reportCreated: "тЬЕ **Report Created Successfully!**",
    reportError: "тЭМ **Error Creating Report**",
    contactInfo: `ЁЯМЯ **Key Features**

**ЁЯЧ║я╕П Interactive Map**
тАв Click to select location
тАв Zoom in/out
тАв Real-time location

**ЁЯУ▒ Multi-Channel Reporting**
тАв Web interface
тАв WhatsApp bot
тАв Mobile friendly

**ЁЯФН Smart Tracking**
тАв Real-time updates
тАв Status notifications
тАв Progress history

**ЁЯдЦ AI Assistance**
тАв 24/7 support
тАв Multi-language support
тАв Instant guidance

Which feature would you like to know about?`,
  },
  hi: {
    title: "рд╕рд┐рд╡рд┐рдХрд╕реЗрдВрд╕ рд╕рд╣рд╛рдпрдХ",
    placeholder: "рдЕрдкрдирд╛ рд╕рдВрджреЗрд╢ рдЯрд╛рдЗрдк рдХрд░реЗрдВ...",
    help: "рд╕рд╣рд╛рдпрддрд╛",
    status: "рд╕реНрдерд┐рддрд┐",
    welcome:
      'рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ рд╕рд┐рд╡рд┐рдХрд╕реЗрдВрд╕ рд╕рд╣рд╛рдпрдХ рд╣реВрдВред рдореИрдВ рдЖрдкрдХреЛ рд╕рдорд╕реНрдпрд╛рдУрдВ рдХреА рд░рд┐рдкреЛрд░реНрдЯ рдХрд░рдиреЗ, рд░рд┐рдкреЛрд░реНрдЯ рдЯреНрд░реИрдХ рдХрд░рдиреЗ рдпрд╛ рдкреНрд░рд╢реНрдиреЛрдВ рдХреЗ рдЙрддреНрддрд░ рджреЗрдиреЗ рдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред "рд╕рд╣рд╛рдпрддрд╛" рдХрд╣рдХрд░ рджреЗрдЦреЗрдВ рдХрд┐ рдореИрдВ рдХреНрдпрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ!',
    loginResponse: `ЁЯФР **рд▓реЙрдЧрд┐рди рдЧрд╛рдЗрдб**

рд▓реЙрдЧрд┐рди рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:

1я╕ПтГг **рдиреЗрд╡реАрдЧреЗрд╢рди рдмрд╛рд░ рдореЗрдВ "рд▓реЙрдЧрд┐рди" рдмрдЯрди рдЦреЛрдЬреЗрдВ** (рдКрдкрд░реА рджрд╛рдПрдВ рдХреЛрдиреЗ рдореЗрдВ)
2я╕ПтГг **рджреЛ рд╡рд┐рдХрд▓реНрдк рдЙрдкрд▓рдмреНрдз рд╣реИрдВ:**
   тАв ЁЯУ▒ рдореЛрдмрд╛рдЗрд▓ OTP - рдлреЛрди рдирдВрдмрд░ рд╕реЗ рд▓реЙрдЧрд┐рди
   тАв ЁЯУз рдИрдореЗрд▓ - рдИрдореЗрд▓ рдФрд░ рдкрд╛рд╕рд╡рд░реНрдб рд╕реЗ рд▓реЙрдЧрд┐рди

3я╕ПтГг **рдирдП рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛:** рд╕рд╛рдЗрди рдЕрдк рд╡рд┐рдХрд▓реНрдк рднреА рдЙрдкрд▓рдмреНрдз рд╣реИ

**рд╕реБрдЭрд╛рд╡:** рдпрджрд┐ рдЖрдк рдкрд╣рд▓реА рдмрд╛рд░ рд╣реИрдВ, рддреЛ рдореЛрдмрд╛рдЗрд▓ OTP рд╕рдмрд╕реЗ рдЖрд╕рд╛рди рд╣реИ!

рдХреНрдпрд╛ рдЖрдкрдХреЛ рд▓реЙрдЧрд┐рди рдкреЗрдЬ рдкрд░ рдЬрд╛рдиреЗ рдореЗрдВ рдорджрдж рдЪрд╛рд╣рд┐рдП?`,
    reportCreated: "тЬЕ **рд░рд┐рдкреЛрд░реНрдЯ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдмрдирд╛рдИ рдЧрдИ!**",
    reportError: "тЭМ **рд░рд┐рдкреЛрд░реНрдЯ рдмрдирд╛рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐**",
    contactInfo: `ЁЯМЯ **рдореБрдЦреНрдп рдлреАрдЪрд░реНрд╕**

**ЁЯЧ║я╕П рдЗрдВрдЯрд░реИрдХреНрдЯрд┐рд╡ рдореИрдк**
тАв рдХреНрд▓рд┐рдХ рдХрд░рдХреЗ рд╕реНрдерд╛рди рдЪреБрдиреЗрдВ
тАв рдЬрд╝реВрдо рдЗрди/рдЖрдЙрдЯ рдХрд░реЗрдВ
тАв рд░рд┐рдпрд▓-рдЯрд╛рдЗрдо рд▓реЛрдХреЗрд╢рди

**ЁЯУ▒ рдорд▓реНрдЯреА-рдЪреИрдирд▓ рд░рд┐рдкреЛрд░реНрдЯрд┐рдВрдЧ**
тАв рд╡реЗрдм рдЗрдВрдЯрд░рдлреЗрд╕
тАв рд╡реНрд╣рд╛рдЯреНрд╕рдРрдк рдмреЙрдЯ
тАв рдореЛрдмрд╛рдЗрд▓ рдлреНрд░реЗрдВрдбрд▓реА

**ЁЯФН рд╕реНрдорд╛рд░реНрдЯ рдЯреНрд░реИрдХрд┐рдВрдЧ**
тАв рд░рд┐рдпрд▓-рдЯрд╛рдЗрдо рдЕрдкрдбреЗрдЯ
тАв рд╕реНрдЯреЗрдЯрд╕ рдиреЛрдЯрд┐рдлрд┐рдХреЗрд╢рди
тАв рдкреНрд░рдЧрддрд┐ рд╣рд┐рд╕реНрдЯреНрд░реА

**ЁЯдЦ AI рдЕрд╕рд┐рд╕реНрдЯреЗрдВрд╕**
тАв 24/7 рд╕рд╣рд╛рдпрддрд╛
тАв рдмрд╣реБрднрд╛рд╖реА рд╕рдкреЛрд░реНрдЯ
тАв рдЗрдВрд╕реНрдЯреЗрдВрдЯ рдЧрд╛рдЗрдбреЗрдВрд╕

рдХреМрди рд╕рд╛ рдлреАрдЪрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?`,
  },
}

export default function WebAssistant({ isOpen, onToggle }: WebAssistantProps) {
  const [language, setLanguage] = useState<"en" | "hi">("en")
  const t = translations[language]

  const [messages, setMessages] = useState<Message[]>([
    {
      id: "1",
      type: "assistant",
      content: t.welcome,
      timestamp: new Date(),
    },
  ])
  const [inputValue, setInputValue] = useState("")
  const [isTyping, setIsTyping] = useState(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const messagesContainerRef = useRef<HTMLDivElement>(null)
  const [showScrollButtons, setShowScrollButtons] = useState(false)
  const [canScrollUp, setCanScrollUp] = useState(false)
  const [canScrollDown, setCanScrollDown] = useState(false)

  useEffect(() => {
    setMessages([
      {
        id: "1",
        type: "assistant",
        content: t.welcome,
        timestamp: new Date(),
      },
    ])
  }, [language, t.welcome])

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }

  const scrollToTop = () => {
    messagesContainerRef.current?.scrollTo({ top: 0, behavior: "smooth" })
  }

  const handleScroll = () => {
    if (messagesContainerRef.current) {
      const { scrollTop, scrollHeight, clientHeight } = messagesContainerRef.current
      const isScrollable = scrollHeight > clientHeight + 10
      const isAtTop = scrollTop <= 10
      const isAtBottom = scrollTop + clientHeight >= scrollHeight - 10

      setCanScrollUp(isScrollable && !isAtTop)
      setCanScrollDown(isScrollable && !isAtBottom)
      setShowScrollButtons(isScrollable && (!isAtTop || !isAtBottom))
    }
  }

  useEffect(() => {
    scrollToBottom()
  }, [messages])

  useEffect(() => {
    const container = messagesContainerRef.current
    if (container) {
      let timeoutId: NodeJS.Timeout
      const debouncedHandleScroll = () => {
        clearTimeout(timeoutId)
        timeoutId = setTimeout(handleScroll, 50)
      }

      container.addEventListener("scroll", debouncedHandleScroll)
      setTimeout(handleScroll, 100)

      return () => {
        container.removeEventListener("scroll", debouncedHandleScroll)
        clearTimeout(timeoutId)
      }
    }
  }, [messages, isOpen])

  const generateReportId = () => {
    const prefix = "R"
    const timestamp = Date.now().toString().slice(-6)
    const random = Math.floor(Math.random() * 1000)
      .toString()
      .padStart(3, "0")
    return `${prefix}-${timestamp}${random}`
  }

  const createReportFromChat = (description: string, location?: string) => {
    try {
      const reportId = generateReportId()
      const reportData = {
        id: reportId,
        title: description.length > 50 ? description.substring(0, 50) + "..." : description,
        description: description,
        category: "Other",
        urgency: "medium",
        address: location || "Location provided via chat",
        latitude: "",
        longitude: "",
        photo: null,
        photoName: null,
        status: "submitted",
        channel: "web-chat",
        submittedAt: new Date().toISOString(),
        timeline: [
          {
            status: "submitted",
            timestamp: new Date().toISOString(),
            description: "Report submitted via web assistant",
          },
        ],
      }

      const existingReports = JSON.parse(localStorage.getItem("civicReports") || "[]")
      existingReports.push(reportData)
      localStorage.setItem("civicReports", JSON.stringify(existingReports))

      return reportId
    } catch (error) {
      console.error("[v0] Error creating report:", error)
      return null
    }
  }

  const findReport = (reportId: string) => {
    try {
      const existingReports = JSON.parse(localStorage.getItem("civicReports") || "[]")
      return existingReports.find((r: any) => r.id === reportId)
    } catch (error) {
      console.error("[v0] Error finding report:", error)
      return null
    }
  }

  const processMessage = async (userMessage: string) => {
    const message = userMessage.toLowerCase().trim()

    if (message.includes("help") || message.includes("рд╕рд╣рд╛рдпрддрд╛")) {
      return language === "hi"
        ? `ЁЯдЦ **рд╕рд┐рд╡рд┐рдХрд╕реЗрдВрд╕ рдЧрд╛рдЗрдб**

рдореИрдВ рдЖрдкрдХреА рдЗрдирдореЗрдВ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ:

ЁЯПа **рд╡реЗрдмрд╕рд╛рдЗрдЯ рдиреЗрд╡реАрдЧреЗрд╢рди**
тАв "рд╣реЛрдо" - рдореБрдЦреНрдп рдкреГрд╖реНрда рдкрд░ рдЬрд╛рдПрдВ
тАв "рд░рд┐рдкреЛрд░реНрдЯ рдлреЙрд░реНрдо" - рд╕рдорд╕реНрдпрд╛ рд░рд┐рдкреЛрд░реНрдЯ рдХрд░рдиреЗ рдХрд╛ рддрд░реАрдХрд╛ рдЬрд╛рдиреЗрдВ
тАв "рдЯреНрд░реИрдХрд┐рдВрдЧ" - рдЕрдкрдиреА рд░рд┐рдкреЛрд░реНрдЯ рдХреИрд╕реЗ рдЯреНрд░реИрдХ рдХрд░реЗрдВ

ЁЯУЪ **рдлреАрдЪрд░ рдЧрд╛рдЗрдб**
тАв "рдХреИрд╕реЗ рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ" - рд░рд┐рдкреЛрд░реНрдЯрд┐рдВрдЧ рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдХреА рдЬрд╛рдирдХрд╛рд░реА
тАв "рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб" - рдлреЛрдЯреЛ рдХреИрд╕реЗ рдЬреЛрдбрд╝реЗрдВ
тАв "рдореИрдк рдЙрдкрдпреЛрдЧ" - рдореИрдк рдХреИрд╕реЗ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ

ЁЯФР **рдЦрд╛рддрд╛ рд╕рд╣рд╛рдпрддрд╛**
тАв "рд▓реЙрдЧрд┐рди" - рд▓реЙрдЧрд┐рди рд╡рд┐рдХрд▓реНрдкреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВ
тАв "рд╕рд╛рдЗрди рдЕрдк" - рдирдпрд╛ рдЦрд╛рддрд╛ рдХреИрд╕реЗ рдмрдирд╛рдПрдВ

рдмрд╕ рдмрддрд╛рдПрдВ рдХрд┐ рдЖрдкрдХреЛ рдХреНрдпрд╛ рдЬрд╛рдирдирд╛ рд╣реИ!`
        : `ЁЯдЦ **CivicSense Guide**

I can help you with:

ЁЯПа **Website Navigation**
тАв "home" - Go to main page
тАв "report form" - Learn how to report issues
тАв "tracking" - How to track your reports

ЁЯУЪ **Feature Guide**
тАв "how to report" - Step-by-step reporting process
тАв "photo upload" - How to add photos
тАв "map usage" - How to use the interactive map

ЁЯФР **Account Help**
тАв "login" - Learn about login options
тАв "sign up" - How to create a new account

Just tell me what you\'d like to know!`
    }

    if (message.includes("login") || message.includes("рд▓реЙрдЧрд┐рди") || message.includes("authenticate")) {
      return t.loginResponse
    }

    if (message.includes("track") || message.includes("рдЯреНрд░реИрдХ") || message.includes("tracking")) {
      return language === "hi"
        ? `ЁЯУН **рд░рд┐рдкреЛрд░реНрдЯ рдЯреНрд░реИрдХрд┐рдВрдЧ рдЧрд╛рдЗрдб**

рдЕрдкрдиреА рд░рд┐рдкреЛрд░реНрдЯ рдЯреНрд░реИрдХ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:

1я╕ПтГг **рдиреЗрд╡реАрдЧреЗрд╢рди рдореЗрдВ "рдЯреНрд░реИрдХ рд░рд┐рдкреЛрд░реНрдЯ" рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ**
2я╕ПтГг **рдЕрдкрдиреА рд░рд┐рдкреЛрд░реНрдЯ рдЖрдИрдбреА рджрд░реНрдЬ рдХрд░реЗрдВ** (R- рд╕реЗ рд╢реБрд░реВ рд╣реЛрддреА рд╣реИ)
3я╕ПтГг **рд░рд┐рдпрд▓-рдЯрд╛рдЗрдо рд╕реНрдЯреЗрдЯрд╕ рджреЗрдЦреЗрдВ:**
   тАв рдЬрдорд╛ рдХрд┐рдпрд╛ рдЧрдпрд╛ тЬЕ
   тАв рд╕рдореАрдХреНрд╖рд╛ рдореЗрдВ ЁЯФД
   тАв рдкреНрд░рдЧрддрд┐ рдореЗрдВ ЁЯЪз
   тАв рд╣рд▓ рд╣реЛ рдЧрдпрд╛ тЬЕ

**рд░рд┐рдкреЛрд░реНрдЯ рдЖрдИрдбреА рдХрд╣рд╛рдВ рдорд┐рд▓реЗрдЧреА:**
тАв рд░рд┐рдкреЛрд░реНрдЯ рдЬрдорд╛ рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж рд╕реНрдХреНрд░реАрди рдкрд░
тАв рдИрдореЗрд▓/SMS рдиреЛрдЯрд┐рдлрд┐рдХреЗрд╢рди рдореЗрдВ

рдХреНрдпрд╛ рдЖрдкрдХреЛ рдЯреНрд░реИрдХрд┐рдВрдЧ рдкреЗрдЬ рдкрд░ рдЬрд╛рдиреЗ рдореЗрдВ рдорджрдж рдЪрд╛рд╣рд┐рдП?`
        : `ЁЯУН **Report Tracking Guide**

To track your reports:

1я╕ПтГг **Click "Track Report" in navigation**
2я╕ПтГг **Enter your Report ID** (starts with R-)
3я╕ПтГг **View real-time status:**
   тАв Submitted тЬЕ
   тАв Under Review ЁЯФД
   тАв In Progress ЁЯЪз
   тАв Resolved тЬЕ

**Where to find Report ID:**
тАв On screen after submitting report
тАв In email/SMS notifications

Would you like me to guide you to the tracking page?`
    }

    if (message.includes("report") || message.includes("рд░рд┐рдкреЛрд░реНрдЯ") || message.includes("how to report")) {
      return language === "hi"
        ? `ЁЯУЭ **рд░рд┐рдкреЛрд░реНрдЯ рдХрд░рдиреЗ рдХрд╛ рдЧрд╛рдЗрдб**

рд╕рдорд╕реНрдпрд╛ рд░рд┐рдкреЛрд░реНрдЯ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:

1я╕ПтГг **"рд░рд┐рдкреЛрд░реНрдЯ рдЗрд╢реНрдпреВ" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ** (рд╣реЛрдо рдкреЗрдЬ рдкрд░ рдпрд╛ рдиреЗрд╡реАрдЧреЗрд╢рди рдореЗрдВ)

2я╕ПтГг **рдлреЙрд░реНрдо рднрд░реЗрдВ:**
   тАв рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╢реАрд░реНрд╖рдХ
   тАв рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╡рд░рдг
   тАв рд╢реНрд░реЗрдгреА рдЪреБрдиреЗрдВ (рд╕рдбрд╝рдХ, рдкрд╛рдиреА, рдмрд┐рдЬрд▓реА, рдЖрджрд┐)
   тАв рддрд╛рддреНрдХрд╛рд▓рд┐рдХрддрд╛ рд╕реНрддрд░

3я╕ПтГг **рд╕реНрдерд╛рди рдЬреЛрдбрд╝реЗрдВ:**
   тАв рдореИрдк рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ
   тАв рдпрд╛ рдкрддрд╛ рдЯрд╛рдЗрдк рдХрд░реЗрдВ

4я╕ПтГг **рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ** (рдЖрд╡рд╢реНрдпрдХ)

5я╕ПтГг **рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ рдФрд░ рд░рд┐рдкреЛрд░реНрдЯ рдЖрдИрдбреА рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ**

**рд╕реБрдЭрд╛рд╡:** рд╕реНрдкрд╖реНрдЯ рдлреЛрдЯреЛ рдФрд░ рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╡рд░рдг рддреЗрдЬрд╝ рд╕рдорд╛рдзрд╛рди рдореЗрдВ рдорджрдж рдХрд░рддреЗ рд╣реИрдВ!

рдХреНрдпрд╛ рдЖрдкрдХреЛ рд░рд┐рдкреЛрд░реНрдЯ рдлреЙрд░реНрдо рдкрд░ рдЬрд╛рдиреЗ рдореЗрдВ рдорджрдж рдЪрд╛рд╣рд┐рдП?`
        : `ЁЯУЭ **How to Report Guide**

To report an issue:

1я╕ПтГг **Click "Report Issue" button** (on home page or navigation)

2я╕ПтГг **Fill the form:**
   тАв Issue title
   тАв Detailed description
   тАв Select category (Road, Water, Electricity, etc.)
   тАв Urgency level

3я╕ПтГг **Add location:**
   тАв Click on the map
   тАв Or type the address

4я╕ПтГг **Upload photos** (required)

5я╕ПтГг **Submit and get Report ID**

**Tip:** Clear photos and detailed descriptions help faster resolution!

Would you like me to guide you to the report form?`
    }

    if (
      message.includes("status") ||
      message.includes("рд╕реНрдерд┐рддрд┐") ||
      message.includes("tour") ||
      message.includes("guide me")
    ) {
      return language === "hi"
        ? `ЁЯОп **рд╡реЗрдмрд╕рд╛рдЗрдЯ рдЯреВрд░**

**рдореБрдЦреНрдп рд╕реЗрдХреНрд╢рди:**

ЁЯПа **рд╣реЛрдо рдкреЗрдЬ**
тАв рд╕рд┐рд╡рд┐рдХрд╕реЗрдВрд╕ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдХрд╛рд░реА
тАв рдореБрдЦреНрдп рдлреАрдЪрд░реНрд╕
тАв рдЖрдВрдХрдбрд╝реЗ рдФрд░ рд╕рдлрд▓рддрд╛ рдХреА рдХрд╣рд╛рдирд┐рдпрд╛рдВ

ЁЯУЭ **рд░рд┐рдкреЛрд░реНрдЯ рд╕реЗрдХреНрд╢рди**
тАв рдЗрдВрдЯрд░реИрдХреНрдЯрд┐рд╡ рдлреЙрд░реНрдо
тАв рдореИрдк рдЗрдВрдЯреАрдЧреНрд░реЗрд╢рди
тАв рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб

ЁЯУН **рдЯреНрд░реИрдХрд┐рдВрдЧ рд╕реЗрдХреНрд╢рди**
тАв рд░рд┐рдпрд▓-рдЯрд╛рдЗрдо рдЕрдкрдбреЗрдЯ
тАв рдкреНрд░рдЧрддрд┐ рдЯреНрд░реИрдХрд┐рдВрдЧ
тАв рд╕реНрдЯреЗрдЯрд╕ рд╣рд┐рд╕реНрдЯреНрд░реА

ЁЯдЦ **AI рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯреНрд╕**
тАв рд╡реЗрдм рдЪреИрдЯ (рдпрд╣ рдореИрдВ рд╣реВрдВ!)
тАв рд╡реНрд╣рд╛рдЯреНрд╕рдРрдк рдмреЙрдЯ

**рдиреЗрд╡реАрдЧреЗрд╢рди рдЯрд┐рдкреНрд╕:**
тАв рдЯреЙрдк рдореЗрдиреВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ
тАв рдореЛрдмрд╛рдЗрд▓ рдкрд░ рд╣реИрдордмрд░реНрдЧрд░ рдореЗрдиреВ рджреЗрдЦреЗрдВ

рдХрд╣рд╛рдВ рд╕реЗ рд╢реБрд░реВ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?`
        : `ЁЯОп **Website Tour**

**Main Sections:**

ЁЯПа **Home Page**
тАв Information about CivicSense
тАв Key features overview
тАв Statistics and success stories

ЁЯУЭ **Report Section**
тАв Interactive form
тАв Map integration
тАв Photo upload

ЁЯУН **Tracking Section**
тАв Real-time updates
тАв Progress tracking
тАв Status history

ЁЯдЦ **AI Assistants**
тАв Web chat (that\'s me!)
тАв WhatsApp bot

**Navigation Tips:**
тАв Use the top menu
тАв Look for hamburger menu on mobile

Where would you like to start?`
    }

    if (
      message.includes("contact") ||
      message.includes("рд╕рдВрдкрд░реНрдХ") ||
      message.includes("features") ||
      message.includes("photo upload")
    ) {
      if (message.includes("photo") || message.includes("рдлреЛрдЯреЛ")) {
        return language === "hi"
          ? `ЁЯУ╕ **рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдЧрд╛рдЗрдб**

рдлреЛрдЯреЛ рдЬреЛрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП:

1я╕ПтГг **рд░рд┐рдкреЛрд░реНрдЯ рдлреЙрд░реНрдо рдореЗрдВ "рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб" рд╕реЗрдХреНрд╢рди рдЦреЛрдЬреЗрдВ**
2я╕ПтГг **"рдлреЛрдЯреЛ рдЪреБрдиреЗрдВ" рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ**
3я╕ПтГг **рдЕрдкрдиреЗ рдбрд┐рд╡рд╛рдЗрд╕ рд╕реЗ рдлреЛрдЯреЛ рд╕реЗрд▓реЗрдХреНрдЯ рдХрд░реЗрдВ**
4я╕ПтГг **рдкреНрд░реАрд╡реНрдпреВ рджреЗрдЦреЗрдВ рдФрд░ рдХрдиреНрдлрд░реНрдо рдХрд░реЗрдВ**

**рдмреЗрд╣рддрд░ рдлреЛрдЯреЛ рдХреЗ рд▓рд┐рдП рдЯрд┐рдкреНрд╕:**
тАв рдЕрдЪреНрдЫреА рд░реЛрд╢рдиреА рдореЗрдВ рд▓реЗрдВ
тАв рд╕рдорд╕реНрдпрд╛ рдХреЛ рд╕реНрдкрд╖реНрдЯ рд░реВрдк рд╕реЗ рджрд┐рдЦрд╛рдПрдВ
тАв рдХрдИ рдПрдВрдЧрд▓ рд╕реЗ рдлреЛрдЯреЛ рд▓реЗрдВ
тАв JPG рдпрд╛ PNG рдлреЙрд░реНрдореЗрдЯ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ

**рдиреЛрдЯ:** рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдХрд░рдирд╛ рдЖрд╡рд╢реНрдпрдХ рд╣реИ - рдпрд╣ рдЕрдзрд┐рдХрд╛рд░рд┐рдпреЛрдВ рдХреЛ рд╕рдорд╕реНрдпрд╛ рдХреЛ рдмреЗрд╣рддрд░ рд╕рдордЭрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИ!`
          : `ЁЯУ╕ **Photo Upload Guide**

To add photos:

1я╕ПтГг **Find "Photo Upload" section in report form**
2я╕ПтГг **Click "Choose Photos" button**
3я╕ПтГг **Select photos from your device**
4я╕ПтГг **Preview and confirm**

**Tips for better photos:**
тАв Take in good lighting
тАв Show the issue clearly
тАв Take multiple angles
тАв Use JPG or PNG format

**Note:** Photo upload is required - it helps authorities understand the issue better!`
      }

      return t.contactInfo
    }

    return language === "hi"
      ? `ЁЯдФ рдореБрдЭреЗ рдпрдХреАрди рдирд╣реАрдВ рд╣реИ рдХрд┐ рдЗрд╕рдореЗрдВ рдХреИрд╕реЗ рдорджрдж рдХрд░реВрдВред рдпрд╣рд╛рдВ рдХреБрдЫ рдЪреАрдЬреЗрдВ рд╣реИрдВ рдЬреЛ рдЖрдк рдХреЛрд╢рд┐рд╢ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ:

**рдиреЗрд╡реАрдЧреЗрд╢рди рд╕рд╣рд╛рдпрддрд╛:**
тАв "рд╣реЛрдо" - рдореБрдЦреНрдп рдкреГрд╖реНрда рдкрд░ рдЬрд╛рдПрдВ
тАв "рд░рд┐рдкреЛрд░реНрдЯ рдлреЙрд░реНрдо" - рд╕рдорд╕реНрдпрд╛ рд░рд┐рдкреЛрд░реНрдЯ рдХрд░рдиреЗ рдХрд╛ рддрд░реАрдХрд╛
тАв "рдЯреНрд░реИрдХрд┐рдВрдЧ" - рдЕрдкрдиреА рд░рд┐рдкреЛрд░реНрдЯ рдХреИрд╕реЗ рдЯреНрд░реИрдХ рдХрд░реЗрдВ

**рдлреАрдЪрд░ рдЧрд╛рдЗрдб:**
тАв "рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб" - рдлреЛрдЯреЛ рдХреИрд╕реЗ рдЬреЛрдбрд╝реЗрдВ
тАв "рдореИрдк рдЙрдкрдпреЛрдЧ" - рдореИрдк рдХреИрд╕реЗ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ
тАв "рд▓реЙрдЧрд┐рди" - рдЦрд╛рддрд╛ рдХреИрд╕реЗ рдмрдирд╛рдПрдВ

**рд╕рд╛рдорд╛рдиреНрдп рд╕рд╣рд╛рдпрддрд╛:**
тАв "рдЯреВрд░" - рдкреВрд░реА рд╡реЗрдмрд╕рд╛рдЗрдЯ рдХрд╛ рдЧрд╛рдЗрдб
тАв "рдлреАрдЪрд░реНрд╕" - рд╕рднреА рд╕реБрд╡рд┐рдзрд╛рдУрдВ рдХреА рдЬрд╛рдирдХрд╛рд░реА

рдЖрдк рдХреНрдпрд╛ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?`
      : `ЁЯдФ I\'m not sure how to help with that. Here are some things you can try:

**Navigation Help:**
тАв "home" - Go to main page
тАв "report form" - How to report issues
тАв "tracking" - How to track reports

**Feature Guide:**
тАв "photo upload" - How to add photos
тАв "map usage" - How to use the map
тАв "login" - How to create account

**General Help:**
тАв "tour" - Full website guide
тАв "features" - All feature information

What would you like to know?`
  }

  const handleSendMessage = async () => {
    if (!inputValue.trim()) return

    const messageContent = inputValue.trim()

    const userMessage: Message = {
      id: Date.now().toString(),
      type: "user",
      content: messageContent,
      timestamp: new Date(),
    }

    setMessages((prev) => [...prev, userMessage])
    setInputValue("")
    setIsTyping(true)

    setTimeout(async () => {
      try {
        const response = await processMessage(messageContent)
        const assistantMessage: Message = {
          id: (Date.now() + 1).toString(),
          type: "assistant",
          content: response,
          timestamp: new Date(),
        }

        setMessages((prev) => [...prev, assistantMessage])
      } catch (error) {
        console.error("[v0] Error processing message:", error)
        const errorMessage: Message = {
          id: (Date.now() + 1).toString(),
          type: "assistant",
          content: "Sorry, I encountered an error processing your message. Please try again.",
          timestamp: new Date(),
        }
        setMessages((prev) => [...prev, errorMessage])
      } finally {
        setIsTyping(false)
      }
    }, 800)
  }

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault()
      handleSendMessage()
    }
  }

  if (!isOpen) {
    return (
      <Button onClick={onToggle} className="fixed bottom-6 right-6 h-14 w-14 rounded-full shadow-lg z-50" size="icon">
        <MessageCircle className="h-6 w-6" />
      </Button>
    )
  }

  return (
    <Card className="fixed bottom-6 right-6 w-96 h-[600px] shadow-xl z-50 flex flex-col max-h-[calc(100vh-3rem)]">
      <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3 bg-primary text-primary-foreground rounded-t-lg flex-shrink-0">
        <CardTitle className="flex items-center gap-2 text-base">
          <Bot className="h-5 w-5" />
          {t.title}
        </CardTitle>
        <div className="flex items-center gap-2">
          <Button
            variant="ghost"
            size="sm"
            onClick={() => setLanguage(language === "en" ? "hi" : "en")}
            className="text-primary-foreground hover:bg-primary-foreground/20"
            title={language === "en" ? "Switch to Hindi" : "Switch to English"}
          >
            <Languages className="h-4 w-4" />
            <span className="ml-1 text-xs">{language === "en" ? "рд╣рд┐" : "EN"}</span>
          </Button>
          <Button
            variant="ghost"
            size="sm"
            onClick={onToggle}
            className="text-primary-foreground hover:bg-primary-foreground/20"
          >
            <X className="h-4 w-4" />
          </Button>
        </div>
      </CardHeader>

      <CardContent className="flex-1 flex flex-col p-0 relative min-h-0">
        <div
          ref={messagesContainerRef}
          className="flex-1 overflow-y-auto p-4 space-y-4 min-h-0"
          style={{ maxHeight: "calc(100% - 120px)" }}
        >
          {messages.map((message) => (
            <div key={message.id} className={`flex ${message.type === "user" ? "justify-end" : "justify-start"}`}>
              <div
                className={`max-w-[85%] rounded-lg px-3 py-2 break-words ${
                  message.type === "user" ? "bg-primary text-primary-foreground" : "bg-muted text-foreground"
                }`}
              >
                <div className="flex items-start gap-2">
                  {message.type === "assistant" && <Bot className="h-4 w-4 mt-0.5 flex-shrink-0" />}
                  {message.type === "user" && <User className="h-4 w-4 mt-0.5 flex-shrink-0" />}
                  <div className="text-sm whitespace-pre-wrap break-words">{message.content}</div>
                </div>
                <div className="text-xs opacity-70 mt-1">
                  {message.timestamp.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" })}
                </div>
              </div>
            </div>
          ))}

          {isTyping && (
            <div className="flex justify-start">
              <div className="bg-muted text-foreground rounded-lg px-3 py-2 max-w-[85%]">
                <div className="flex items-center gap-2">
                  <Bot className="h-4 w-4" />
                  <div className="flex space-x-1">
                    <div className="w-2 h-2 bg-current rounded-full animate-bounce"></div>
                    <div
                      className="w-2 h-2 bg-current rounded-full animate-bounce"
                      style={{ animationDelay: "0.1s" }}
                    ></div>
                    <div
                      className="w-2 h-2 bg-current rounded-full animate-bounce"
                      style={{ animationDelay: "0.2s" }}
                    ></div>
                  </div>
                </div>
              </div>
            </div>
          )}
          <div ref={messagesEndRef} />
        </div>

        {showScrollButtons && (
          <div className="absolute right-2 top-1/2 transform -translate-y-1/2 flex flex-col gap-1 z-10">
            {canScrollUp && (
              <Button
                variant="secondary"
                size="sm"
                onClick={scrollToTop}
                className="h-8 w-8 p-0 bg-background/95 backdrop-blur-sm shadow-lg border hover:bg-accent"
                title="Scroll to top"
              >
                <ChevronUp className="h-4 w-4" />
              </Button>
            )}
            {canScrollDown && (
              <Button
                variant="secondary"
                size="sm"
                onClick={scrollToBottom}
                className="h-8 w-8 p-0 bg-background/95 backdrop-blur-sm shadow-lg border hover:bg-accent"
                title="Scroll to bottom"
              >
                <ChevronDown className="h-4 w-4" />
              </Button>
            )}
          </div>
        )}

        <div className="border-t p-4 flex-shrink-0 bg-background">
          <div className="flex gap-2">
            <Input
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder={t.placeholder}
              className="flex-1"
            />
            <Button onClick={handleSendMessage} size="icon" disabled={!inputValue.trim()}>
              <Send className="h-4 w-4" />
            </Button>
          </div>
          <div className="flex gap-2 mt-2">
            <Button variant="outline" size="sm" onClick={() => setInputValue(language === "hi" ? "рд╕рд╣рд╛рдпрддрд╛" : "help")}>
              <HelpCircle className="h-3 w-3 mr-1" />
              {t.help}
            </Button>
            <Button variant="outline" size="sm" onClick={() => setInputValue(language === "hi" ? "рд╕реНрдерд┐рддрд┐" : "status")}>
              <Search className="h-3 w-3 mr-1" />
              {t.status}
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  )
}
